#include "common.h"

//
// Structure definitions
//

struct _out {
    vec4 low;
    vec4 high;
};

struct v2p {
    vec4 factor;
    vec3 tc0;
    vec3 tc1;
};


//
// Global variable definitions
//

uniform samplerCube s_sky0;
uniform samplerCube s_sky1;

//
// Function declarations
//

_out xlat_main( in v2p I );

//
// Function definitions
//

_out xlat_main( in v2p I ) {
    vec3 s0;
    vec3 s1;
    vec3 sky;
    float scale;
    _out o;

    s0 = vec3( textureCube( s_sky0, I.tc0));
    s1 = vec3( textureCube( s_sky1, I.tc1));
    sky = (vec3( I.factor) * mix( s0, s1, vec3( I.factor.w )));
    sky = (sky * 0.330000);
    scale = texture2D( s_tonemap, vec2( 0.500000, 0.500000)).x ;
    tonemap( o.low, o.high, sky, (scale * 2.00000));
    return o;
}


//
// Translator's entry point
//
void main() {
    _out xlat_retVal;
    v2p xlat_temp_I;
    xlat_temp_I.factor = vec4( gl_Color);
    xlat_temp_I.tc0 = vec3( gl_TexCoord[0]);
    xlat_temp_I.tc1 = vec3( gl_TexCoord[1]);

    xlat_retVal = xlat_main( xlat_temp_I);

    gl_FragData[0] = vec4( xlat_retVal.low);
    gl_FragData[1] = vec4( xlat_retVal.high);
}
