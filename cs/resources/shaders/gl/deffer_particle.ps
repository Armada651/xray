#include "common.h"
#include "sload.h"

layout(location = 0) in vec4 	color;
#if defined(USE_R2_STATIC_SUN) && !defined(USE_LM_HEMI)
layout(location = 1) in vec4	tcdh;		// Texture coordinates,         w=sun_occlusion
#else
layout(location = 1) in vec2	tcdh;		// Texture coordinates
#endif
layout(location = 2) in vec4	position;	// position + hemi
layout(location = 3) in vec3	N;			// Eye-space normal        (for lighting)
#ifdef USE_TDETAIL
layout(location = 4) in vec2	tcdbump;	// d-bump
	#ifdef USE_LM_HEMI
layout(location = 5) in vec2	lmh;		// lm-hemi
	#endif
#else
	#ifdef USE_LM_HEMI
layout(location = 4) in vec2	lmh;		// lm-hemi
	#endif
#endif

layout(location = 0) out vec4	P;			// px,py,pz, m-id
layout(location = 1) out vec4	Ne;			// nx,ny,nz, hemi
layout(location = 2) out vec4	C;			// r, g, b,  gloss

void 	main	()
{
  // 1. Base texture + kill pixels with low alpha
	half4 	D 	= 	tex2D		(s_base, tcdh);
			D	*=	color;
			clip	(D.w-def_aref);

	// 2. Standart output
	Ne			= half4(normalize(N.xyz), position.w / 2.0f + 1.0f); // OGL: Depth is -1:1
	P		    = half4(position.xyz + Ne.xyz*def_virtualh/2.f, xmaterial);
	C			= half4(D.xyz, def_gloss);		// OUT: rgb.gloss
}
